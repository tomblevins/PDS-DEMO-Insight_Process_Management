<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_insight_pr_0_event_ledger</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_insight_pr_0_event_ledger">state=2^EQ<item display_value="Ready" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="2"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Ledger Event - Processor</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var sysID = current.getUniqueValue();

    (function() {

        try {
            var inputs = {};
            inputs['sysid'] = sysID; // String 

            // Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
            sn_fd.FlowAPI.getRunner().subflow('x_snc_insight_pr_0.br__process_event__processor').inBackground().withInputs(inputs).run();

            // Execute Synchronously: Run in foreground. Code snippet has access to outputs.
            //		var result = sn_fd.FlowAPI.getRunner().subflow('x_snc_insight_pr_0.br__process_event__processor').inForeground().withInputs(inputs).run();
            var outputs = result.getOutputs();

            // Current subflow has no outputs defined.		
        } catch (ex) {
            var message = ex.getMessage();
            gs.error(message);
        }

    })();
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-26 18:13:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>e56534f747fc9510ab51f109536d436f</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Ledger Event - Processor</sys_name>
        <sys_overrides/>
        <sys_package display_value="Insight Process Management" source="x_snc_insight_pr_0">39bd5e9747f05510ab51f109536d431c</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Insight Process Management">39bd5e9747f05510ab51f109536d431c</sys_scope>
        <sys_update_name>sys_script_e56534f747fc9510ab51f109536d436f</sys_update_name>
        <sys_updated_by>TBlev1</sys_updated_by>
        <sys_updated_on>2023-08-03 18:45:21</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
